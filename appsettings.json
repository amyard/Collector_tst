{
    "ConfigData": {
        "CollectorName": "CollectorName",
        "EmailFromAddress": "blackguarder1987@gmail.com",
        "NotifyEmailAddress": "blackguarder1987@gmail.com",
        "SearchDrive": "D",
        "InstantPayCardDataFolder": "D:\\rider_projects\\test_api\\data\\",
        "InstantPayCardArchiveFolder": "D:\\rider_projects\\test_api\\archive\\",
        "InstantAPIBaseUrl": "https://api.test.com/",
        "InstantAPICensusFileUrl": "path/someId/{0}",
        "InstantPaycardAPIKey": "somekey3000",
        "InternalLocationId": "aaaaaaa",
        "FileSizeLimitInBytes": 10485760
    },
    "Serilog":{
        "Using": ["Serilog.Sinks.File", "Serilog.Sinks.Console", "Serilog.Filters.Expressions", "Serilog.Settings.Configuration"],
        "MinimumLevel": {
            "Default": "Debug",
            "Override": {
                "Microsoft": "Warning",
                "System": "Warning",
                "System.Net.Http.HttpClient": "Warning"
            }
        },
        "Enrich": ["FromLogContext"],
        "WriteTo": [
            {
                "Name": "Console",
                "Args": {
                    "theme": "Serilog.Sinks.SystemConsole.Themes.AnsiConsoleTheme::Literate, Serilog.Sinks.Console",
                    "outputTemplate": "[{Timestamp:HH:mm:ss} {Level}] {Message:lj}{NewLine}{Exception}{NewLine}"
                }
            },
            {
                "Name": "Logger",
                "Args": {
                    "configureLogger": {
                        "Filter": [
                            {
                                "Name": "ByIncludingOnly",
                                "Args": {
                                    "expression": "(@Level = 'Error' or @Level = 'Fatal' or @Level = 'Warning')"
                                }
                            }
                        ],
                        "WriteTo": [
                            {
                                "Name": "File",
                                "Args": {
                                    "path": "D:\\rider_projects\\test_api\\logging\\ipc_LOGFILE_Error_.txt",
                                    "outputTemplate": "{Timestamp:yyyy-MM-dd HH:mm:ss} [{Level}] {Message:lj}{NewLine}{Exception}{NewLine}",
                                    "rollOnFileSizeLimit": true,
                                    "fileSizeLimitBytes": 10485760,
                                    "retainedFileCountLimit": 10,
                                    "shared": true,
                                    "RollingInterval": "Day"
                                }
                            }
                        ]
                    }
                }
            },
            {
                "Name": "Logger",
                "Args": {
                    "configureLogger": {
                        "Filter": [
                            {
                                "Name": "ByIncludingOnly",
                                "Args": {
                                    "expression": "(@Level = 'Information' or @Level = 'Debug')"
                                }
                            }
                        ],
                        "WriteTo": [
                            {
                                "Name": "File",
                                "Args": {
                                    "path": "D:\\rider_projects\\test_api\\logging\\ipc_LOGFILE_Info_.txt",
                                    "outputTemplate": "{Timestamp:yyyy-MM-dd HH:mm:ss} [{Level}] {Message:lj}{NewLine}{Exception}{NewLine}",
                                    "rollOnFileSizeLimit": true,
                                    "fileSizeLimitBytes": 10485760,
                                    "retainedFileCountLimit": 10,
                                    "shared": true,
                                    "RollingInterval": "Day"
                                }
                            }
                        ]
                    }
                }
            }
        ]
    }
}